.text
.global _start
B _start
B SERVISE_UND
B SERVISE_SVC
B SERVISE_ABT_INST
B SERVISE_ABT_DATA
.word 0
B SERVISE_IRQ
B SERVISE_FIQ
_start:
MOV R1, #0b11010010
MSR CPSR_c, R1
LDR SP, =0xFFFFFFFF-3
MOV R1, #0b11010011
MSR CPSR_c, R1
LDR SP, =0x3FFFFFFF-3
BL CONFIG_GIC
LDR R0, =0xFF200050
MOV R1, #0xF
STR R1, [R0, #0x8]
MOV R0, #0b01010011
MSR CPSR_c, R0

IDLE:
LDR R0, =0xFF200000
MOVW R4,#0x0654
MOVT R4,#0x793d
MOVW R5,#0x007C
STR R4,[R0,#0x20]
STR R5,[R0,#0x30]
LDR R3, =0x0A000000
DL1: SUBS R3,R3,#1
BNE DL1
LDR R0, =0xFF200050
B IDLE
SERVISE_UND:
B SERVISE_UND
SERVISE_SVC:
B SERVISE_SVC
SERVISE_ABT_INST:
B SERVISE_ABT_INST
SERVISE_ABT_DATA:
B SERVISE_ABT_DATA
SERVISE_IRQ:
PUSH {R0-R7, LR}
LDR R4, =0xFFFEC100
LDR R5, [R4, #0x0C]
FPGA_IRQ1_HANDLER:
CMP R5, #73

UNEXPECTED:
BNE UNEXPECTED
BL KEY_ISR
EXIT_IRQ:
STR R5, [R4, #0x10]
POP {R0-R7, LR}
SUBS PC, LR, #4
SERVISE_FIQ:
B SERVISE_FIQ

CONFIG_GIC:
PUSH {LR}
MOV R0, #73
MOV R1, #1
BL CONFIG_INTERRUPT
LDR R0, =0xFFFEC100
LDR R1, =0xFFFF
STR R1, [R0, #0x04]
MOV R1, #1
STR R1, [R0]
LDR R0, =0xFFFED000
STR R1, [R0]
POP {PC}

CONFIG_INTERRUPT:
PUSH {R4-R5, LR}
LSR R4, R0, #3
BIC R4, R4, #3
LDR R2, =0xFFFED100
ADD R4, R2, R4
AND R2, R0, #0x1F
MOV R5, #1
LSL R2, R5, R2
LDR R3, [R4]
ORR R3, R3, R2
STR R3, [R4]
BIC R4, R0, #3
LDR R2, =0xFFFED800
ADD R4, R2, R4
AND R2, R0, #3
ADD R4, R2, R4
STRB R1, [R4]
POP {R4-R5, PC}
KEY_ISR:
LDR R0, =0xFF200050
LDR R1, [R0, #0xC]
MOV R2, #0xF
STR R2, [R0,#0xC]
LDR R0, =0xFF200020

CHECK_KEY0:		//key0 begin
MOV R3, #0x1
ANDS R3, R3, R1
BEQ CHECK_KEY1
B SNAKE
B END_KEY_ISR 	//key0 end

CHECK_KEY1:
MOV R3, #0x2
ANDS R3, R3, R1
BEQ CHECK_KEY2
B BACKSNAKE
B END_KEY_ISR

CHECK_KEY2:
MOV R3, #0x4
ANDS R3, R3, R1
BEQ IS_KEY3
MOVW R2,#0b111011100000110
MOVT R2,#0b101010001111000
MOVW R7,#0b111010001111001
MOVT R7, #0x0000
STR R2, [R0]
STR R7,[R0,#0x10]
B END_KEY_ISR

IS_KEY3:
MOV R2, #0
STR R2, [R0,#0x10]
CMP R12,#0x3
BEQ SHOW3
CMP R12,#0x4
BEQ SHOW4

SHOW3:
MOV R2, #0b01001111
STR R2, [R0]
MOV R12,#0x4
LDR R9, =0x40000000
DLL1:SUBS R9, R9, #1
BNE DLL1
BX LR

SHOW4:
MOV R2, #0b01100110
STR R2, [R0]
MOV R12,#0x3
LDR R9, =0x40000000
DLL2:SUBS R9, R9, #1
BNE DLL2
BX LR

END_KEY_ISR:
LDR R9, =0x40000000
DL:SUBS R9, R9, #1
BNE DL
MOV R2, #0b0
STR R2, [R0]
BX LR



.include "snake.s"

HEX0: .word 0xFF200020
HEX5: .word 0xFF200030
.end
